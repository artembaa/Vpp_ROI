#include "VPR_def.h"

UC  GetIncl(SI  X1,
			SI  Y1,
			SI  X2,
			SI  Y2)
{
    SI      dXs,
			dYs,
			dX,
			dY;
    UC      Incl;
    SI		Index;

    dYs = Y1 - Y2;
    if( dYs < 0 )  dY = -dYs;
    else           dY = dYs;
    dXs = X1 - X2;
    if( dXs < 0 )  dX = -dXs;
    else           dX = dXs;

    if( dX >= INCL_TABLE_64_SIZE || dY >= INCL_TABLE_64_SIZE )
    {
       if( dX > dY )
       {
		  dY=(dY*(INCL_TABLE_64_SIZE-1)/dX);
		  dX=(INCL_TABLE_64_SIZE-1);
       }
       else
       {
		  dX=(dX*(INCL_TABLE_64_SIZE-1)/dY);
		  dY=(INCL_TABLE_64_SIZE-1);
       }
    }
    Index=dY*INCL_TABLE_64_SIZE+dX;
    Incl=InclTable64[Index];

    if( dYs*dXs > 0 )
       Incl=(DEGREE_180)-Incl;
    if( Incl == (DEGREE_180) )
       Incl=0;
    return Incl;
}


 UC DeltaIncl(UC  Incl1,
			  UC  Incl2,
			  UC  Range)
 {
    SI dIncl=Incl1-Incl2;
    if( dIncl < 0 )
       dIncl=-dIncl;
    if( (dIncl<<1) < Range )
       return (UC)dIncl;
    else
       return Range-dIncl;
 }


 UC MedIncl( UC BaseIncl,
			 UC Incl,
			 UC Range)
 {
     SI	 dIncl;
     SI  Sign;
     SI  MedIncl;

     dIncl=BaseIncl-Incl;
     if( dIncl < 0 )
     {
		Sign=1;
		dIncl=-dIncl;
     }
     else
		Sign=-1;

     if( (dIncl<<1) > Range )
     {
		dIncl=Range-dIncl;
		Sign=-Sign;
     }
     dIncl>>=1;


     MedIncl=BaseIncl+Sign*dIncl;
     if( MedIncl >= Range )
		MedIncl-=Range;
     else
     if( MedIncl < 0 )
		MedIncl+=Range;

     return  (UC)MedIncl;
 }


 UC  GetDir(SI  X1,
			SI  Y1,
			SI  X2,
			SI  Y2)
 {
    UC Dir;
    Dir=GetIncl(X1,Y1,X2,Y2);

    if( X1 >= X2 && Y1 > Y2 )
    {
       if( Dir == 0 )
	      Dir+=(DEGREE_180);
    }
    else
    if( X1 > X2 && Y1 <= Y2 )
       Dir+=(DEGREE_180);
    else
    if( X1 <= X2 && Y1 < Y2 )
    {
       if( Dir != 0 )
		  Dir+=(DEGREE_180);
    }
    return Dir;
 }


 SI  DeltaDir(SI Dir1,
			  SI Dir2 )
 // return value = [0 - DEGREE_180] ]
 {
    SI  Delta;
    Delta=Dir1-Dir2;
    if( Delta < 0 )
       Delta=-Delta;
    if( Delta <= (DEGREE_180) )
       return Delta;
    return (DEGREE_360-Delta);
 }


 UI GetDist(SI X1,
			SI Y1,
			SI X2,
			SI Y2)
 {
    SL   dX,dY;
    dX=X1-X2;dY=Y1-Y2;
    dX*=dX;dY*=dY;
    return (UI) sqrt(dX+dY);
 }

 SI  R_Index[INCL_NUMBER*R_CUTSET_HSIZE] =
 {
	 /* incl =  0 */
	 0 * R_X + 1 ,   0 * R_X + 2 ,   0 * R_X + 3 ,   0 * R_X + 4 ,
	 0 * R_X + 5 ,   0 * R_X + 6 ,   0 * R_X + 7 ,   0 * R_X + 8 ,
	 0 * R_X + 9 ,   0 * R_X + 10,   0 * R_X + 11,   0 * R_X + 12,
	 0 * R_X + 13 ,  0 * R_X + 14,   0 * R_X + 15,   0 * R_X + 16,
	 0 * R_X + 17 ,  0 * R_X + 18,   0 * R_X + 19 ,  0 * R_X + 20 ,
	 0 * R_X + 21,

	 /* incl =  1 */
	 0 * R_X + 1 ,  0 * R_X + 2 ,  -1 * R_X + 3 ,  -1 * R_X + 4 ,
	 -1 * R_X + 5 , -1 * R_X + 6 ,  -1 * R_X + 7 , -2 * R_X + 8 ,
	 -2 * R_X + 9 , -2 * R_X + 10,  -2 * R_X + 11, -2 * R_X + 12,
	 -3 * R_X + 13, -3 * R_X + 14 , -3 * R_X + 15 ,-3 * R_X + 16,
	 -3 * R_X + 17, -4 * R_X + 18 , -4 * R_X + 19 ,-4 * R_X + 20,
	 -4 * R_X + 21,

	 /* incl =  2 */
	 0 * R_X + 1 , -1 * R_X + 2 ,  -1 * R_X + 3 , -2 * R_X + 4 ,
	 -2 * R_X + 5 , -2 * R_X + 6 ,  -3 * R_X + 6 , -3 * R_X + 7 ,
	 -3 * R_X + 8 , -4 * R_X + 9 ,  -4 * R_X + 10, -5 * R_X + 11,
	 -5 * R_X + 12 ,-5 * R_X + 13 , -6 * R_X + 13, -6 * R_X + 14 ,
	 -6 * R_X + 15 ,-7 * R_X + 16 , -7 * R_X + 17, -8 * R_X + 18,
	 -8 * R_X + 19,

	 /* incl =  3 */
	 -1 * R_X + 1 , -1 * R_X + 2 , -2 * R_X + 2 , -2 * R_X + 3 ,
	 -3 * R_X + 4 , -3 * R_X + 5 , -4 * R_X + 6 , -4 * R_X + 7 ,
	 -5 * R_X + 7 , -5 * R_X + 8 , -6 * R_X + 9 , -7 * R_X + 10,
	 -7 * R_X + 11, -8 * R_X + 11, -8 * R_X + 12, -9 * R_X + 13,
	 -10 * R_X + 14,-10 * R_X + 15,-11 * R_X + 15,-11 * R_X + 16,
	 -12 * R_X + 17,

	 /* incl =  4 */
	 -1 * R_X + 1 ,  -1 * R_X + 2 , -2 * R_X + 2 , -3 * R_X + 3 ,
	 -4 * R_X + 3 ,  -4 * R_X + 4 , -5 * R_X + 5 , -5 * R_X + 6 ,
	 -6 * R_X + 6 ,  -7 * R_X + 7 , -8 * R_X + 7 , -8 * R_X + 8 ,
	 -9 * R_X + 9,   -9 * R_X + 10, -10 * R_X + 10,-11 * R_X + 11,
	 -12 * R_X + 11, -12 * R_X + 12,-13 * R_X + 13,-13 * R_X + 14,
	 -14 * R_X + 14,


	 /* incl =  5 */
	 -1 * R_X + 1 , -2 * R_X + 1 , -2 * R_X + 2 , -3 * R_X + 2 ,
	 -4 * R_X + 3 , -5 * R_X + 3 , -6 * R_X + 4 , -7 * R_X + 4 ,
	 -7 * R_X + 5 , -8 * R_X + 5 , -9 * R_X + 6 , -10 * R_X + 7 ,
	 -11 * R_X + 7, -11 * R_X + 8, -12 * R_X + 8, -13 * R_X + 9 ,
	 -14 * R_X + 9, -14 * R_X + 10,-15 * R_X + 10,-16 * R_X + 11,
	 -17 * R_X + 11,


	 /* incl =  6 */
	 -1 * R_X + 0 , -2 * R_X + 1 , -3 * R_X + 1 , -4 * R_X + 2 ,
	 -5 * R_X + 2 , -6 * R_X + 2 , -6 * R_X + 3 , -7 * R_X + 3 ,
	 -8 * R_X + 3 , -9 * R_X + 4 , -10 * R_X + 4, -11 * R_X + 5 ,
	 -12 * R_X + 5, -13 * R_X + 5, -13 * R_X + 6, -14 * R_X + 6 ,
	 -15 * R_X + 6 ,-16 * R_X + 7 ,-17 * R_X + 7 ,-18 * R_X + 8 ,
	 -19 * R_X + 8 ,

	 /* incl =  7 */
	 -1 * R_X + 0 , -2 * R_X + 0 , -3 * R_X + 1 , -4 * R_X + 1 ,
	 -5 * R_X + 1 , -6 * R_X + 1 , -7 * R_X + 1 , -8 * R_X + 2 ,
	 -9 * R_X + 2 , -10 * R_X + 2 ,-11 * R_X + 2 ,-12 * R_X + 2 ,
	 -13 * R_X + 3, -14 * R_X + 3, -15 * R_X + 3, -16 * R_X + 3,
	 -17 * R_X + 3, -18 * R_X + 4, -19 * R_X + 4 ,-20 * R_X + 4 ,
	 -21 * R_X + 4 ,

	 /* incl =  8 */
	 -1 * R_X + 0 , -2 * R_X + 0 , -3 * R_X + 0 , -4 * R_X + 0 ,
	 -5 * R_X + 0 , -6 * R_X + 0 , -7 * R_X + 0 , -8 * R_X + 0 ,
	 -9 * R_X + 0 , -10 * R_X + 0 ,-11 * R_X + 0 ,-12 * R_X + 0 ,
	 -13 * R_X + 0 ,-14 * R_X + 0 ,-15 * R_X + 0 ,-16 * R_X + 0 ,
	 -17 * R_X + 0 ,-18 * R_X + 0 ,-19 * R_X + 0, -20 * R_X + 0,
	 -21 * R_X + 0,

	 /* incl =  9 */
	 -1 * R_X - 0 , -2 * R_X - 0 , -3 * R_X - 1 , -4 * R_X - 1 ,
	 -5 * R_X - 1 , -6 * R_X - 1 , -7 * R_X - 1 , -8 * R_X - 2 ,
	 -9 * R_X - 2 , -10 * R_X - 2 ,-11 * R_X - 2 ,-12 * R_X - 2 ,
	 -13 * R_X - 3, -14 * R_X - 3, -15 * R_X - 3, -16 * R_X - 3 ,
	 -17 * R_X - 3, -18 * R_X - 4 ,-19 * R_X - 4, -20 * R_X - 4,
	 -21 * R_X - 4,

	 /* incl = 10 */
	 -1 * R_X - 0 , -2 * R_X - 1 , -3 * R_X - 1 , -4 * R_X - 2 ,
	 -5 * R_X - 2 , -6 * R_X - 2 , -6 * R_X - 3 , -7 * R_X - 3 ,
	 -8 * R_X - 3 , -9 * R_X - 4 , -10 * R_X - 4 ,-11 * R_X - 5 ,
	 -12 * R_X - 5, -13 * R_X - 5, -13 * R_X - 6 ,-14 * R_X - 6,
	 -15 * R_X - 6, -16 * R_X - 7, -17 * R_X - 7, -18 * R_X - 8,
	 -19 * R_X - 8,

	 /* incl = 11 */
	 -1 * R_X - 1 , -2 * R_X - 1 , -2 * R_X - 2 , -3 * R_X - 2 ,
	 -4 * R_X - 3 , -5 * R_X - 3 , -6 * R_X - 4 , -7 * R_X - 4 ,
	 -7 * R_X - 5 , -8 * R_X - 5 , -9 * R_X - 6 , -10 * R_X - 7 ,
	 -11 * R_X - 7, -11 * R_X - 8, -12 * R_X - 8, -13 * R_X - 9 ,
	 -14 * R_X - 9, -14 * R_X - 10,-15 * R_X - 10,-16 * R_X - 11,
	 -17 * R_X - 11,

	 /* incl = 12 */
	 -1 * R_X - 1 , -1 * R_X - 2 , -2 * R_X - 2 , -3 * R_X - 3 ,
	 -4 * R_X - 3 , -4 * R_X - 4 , -5 * R_X - 5 , -5 * R_X - 6 ,
	 -6 * R_X - 6 , -7 * R_X - 7 , -8 * R_X - 7 , -8 * R_X - 8 ,
	 -9 * R_X - 9,  -9 * R_X - 10, -10 * R_X - 10,-11 * R_X - 11,
	 -12 * R_X - 11,-12 * R_X - 12,-13 * R_X - 13,-13 * R_X - 14,
	 -14 * R_X - 14,

	 /* incl = 13 */
	 -1 * R_X - 1 , -1 * R_X - 2 , -2 * R_X - 2 , -2 * R_X - 3 ,
	 -3 * R_X - 4 , -3 * R_X - 5 , -4 * R_X - 6 , -4 * R_X - 7 ,
	 -5 * R_X - 7 , -5 * R_X - 8 , -6 * R_X - 9 , -7 * R_X - 10,
	 -7 * R_X - 11, -8 * R_X - 11, -8 * R_X - 12, -9 * R_X - 13,
	 -10 * R_X - 14,-10 * R_X - 15,-11 * R_X - 15,-11 * R_X - 16,
	 -12 * R_X - 17,

	 /* incl = 14 */
	 0 * R_X - 1 , -1 * R_X - 2 , -1 * R_X - 3 , -2 * R_X - 4 ,
	 -2 * R_X - 5 , -2 * R_X - 6 , -3 * R_X - 6 , -3 * R_X - 7 ,
	 -3 * R_X - 8 , -4 * R_X - 9 , -4 * R_X - 10, -5 * R_X - 11,
	 -5 * R_X - 12, -5 * R_X - 13, -6 * R_X - 13, -6 * R_X - 14,
	 -6 * R_X - 15, -7 * R_X - 16, -7 * R_X - 17, -8 * R_X - 18,
	 -8 * R_X - 19,

	 /* incl = 15 */
	 0 * R_X - 1 ,  0 * R_X - 2 , -1 * R_X - 3 , -1 * R_X - 4 ,
	 -1 * R_X - 5 , -1 * R_X - 6 , -1 * R_X - 7 , -2 * R_X - 8 ,
	 -2 * R_X - 9 , -2 * R_X - 10, -2 * R_X - 11, -2 * R_X - 12,
	 -3 * R_X - 13, -3 * R_X - 14, -3 * R_X - 15, -3 * R_X - 16,
	 -3 * R_X - 17, -4 * R_X - 18, -4 * R_X - 19, -4 * R_X - 20,
	 -4 * R_X - 21
 };

 SI  S_Index[INCL_NUMBER*S_CUTSET_HSIZE] =
 {
	 /* incl =  0 */
	 0 * S_X + 1 ,   0 * S_X + 2 ,   0 * S_X + 3 ,   0 * S_X + 4 ,
	 0 * S_X + 5 ,   0 * S_X + 6 ,   0 * S_X + 7 ,
	 /* incl =  1 */
	 0 * S_X + 1 ,  0 * S_X + 2 ,  -1 * S_X + 3 ,  -1 * S_X + 4 ,
	 -1 * S_X + 5 , -1 * S_X + 6 ,  -1 * S_X + 7 ,
	 /* incl =  2 */
	 0 * S_X + 1 , -1 * S_X + 2 ,  -1 * S_X + 3 , -2 * S_X + 4 ,
	 -2 * S_X + 5 , -2 * S_X + 6 ,  -3 * S_X + 6 ,
	 /* incl =  3 */
	 -1 * S_X + 1 , -1 * S_X + 2 , -2 * S_X + 2 , -2 * S_X + 3 ,
	 -3 * S_X + 4 , -3 * S_X + 5 , -4 * S_X + 6 ,
	 /* incl =  4 */
	 -1 * S_X + 1 ,  -1 * S_X + 2 , -2 * S_X + 2 , -3 * S_X + 3 ,
	 -4 * S_X + 3 ,  -4 * S_X + 4 , -5 * S_X + 5 ,
	 /* incl =  5 */
	 -1 * S_X + 1 , -2 * S_X + 1 , -2 * S_X + 2 , -3 * S_X + 2 ,
	 -4 * S_X + 3 , -5 * S_X + 3 , -6 * S_X + 4 ,
	 /* incl =  6 */
	 -1 * S_X + 0 , -2 * S_X + 1 , -3 * S_X + 1 , -4 * S_X + 2 ,
	 -5 * S_X + 2 , -6 * S_X + 2 , -6 * S_X + 3 ,
	 /* incl =  7 */
	 -1 * S_X + 0 , -2 * S_X + 0 , -3 * S_X + 1 , -4 * S_X + 1 ,
	 -5 * S_X + 1 , -6 * S_X + 1 , -7 * S_X + 1 ,
	 /* incl =  8 */
	 -1 * S_X + 0 , -2 * S_X + 0 , -3 * S_X + 0 , -4 * S_X + 0 ,
	 -5 * S_X + 0 , -6 * S_X + 0 , -7 * S_X + 0 ,
	 /* incl =  9 */
	 -1 * S_X - 0 , -2 * S_X - 0 , -3 * S_X - 1 , -4 * S_X - 1 ,
	 -5 * S_X - 1 , -6 * S_X - 1 , -7 * S_X - 1 ,
	 /* incl = 10 */
	 -1 * S_X - 0 , -2 * S_X - 1 , -3 * S_X - 1 , -4 * S_X - 2 ,
	 -5 * S_X - 2 , -6 * S_X - 2 , -6 * S_X - 3 ,
	 /* incl = 11 */
	 -1 * S_X - 1 , -2 * S_X - 1 , -2 * S_X - 2 , -3 * S_X - 2 ,
	 -4 * S_X - 3 , -5 * S_X - 3 , -6 * S_X - 4 ,
	 /* incl = 12 */
	 -1 * S_X - 1 , -1 * S_X - 2 , -2 * S_X - 2 , -3 * S_X - 3 ,
	 -4 * S_X - 3 , -4 * S_X - 4 , -5 * S_X - 5 ,
	 /* incl = 13 */
	 -1 * S_X - 1 , -1 * S_X - 2 , -2 * S_X - 2 , -2 * S_X - 3 ,
	 -3 * S_X - 4 , -3 * S_X - 5 , -4 * S_X - 6 ,
	 /* incl = 14 */
	 0 * S_X - 1 , -1 * S_X - 2 , -1 * S_X - 3 , -2 * S_X - 4 ,
	 -2 * S_X - 5 , -2 * S_X - 6 , -3 * S_X - 6 ,
	 /* incl = 15 */
	 0 * S_X - 1 ,  0 * S_X - 2 , -1 * S_X - 3 , -1 * S_X - 4 ,
	 -1 * S_X - 5 , -1 * S_X - 6 , -1 * S_X - 7
 };

 SI S_LineIndex[HALF_INCL_NUMBER*LINE_STREAM_CORRELATOR_SIZE]=
{
    0*S_X+2, 0*S_X+1, 0*S_X+0, 0*S_X-1, 0*S_X-2,
   -1*S_X+2, 0*S_X+1, 0*S_X+0, 0*S_X-1, 1*S_X-2,
   -2*S_X+2,-1*S_X+1, 0*S_X+0, 1*S_X-1, 2*S_X-2,
   -2*S_X+1,-1*S_X+0, 0*S_X+0, 1*S_X-0, 2*S_X-1,
   -2*S_X+0,-1*S_X+0, 0*S_X+0, 1*S_X-0, 2*S_X-0,
   -2*S_X-1,-1*S_X-0, 0*S_X+0, 1*S_X+0, 2*S_X+1,
   -2*S_X-2,-1*S_X-1, 0*S_X+0, 1*S_X+1, 2*S_X+2,
   -1*S_X-2, 0*S_X-1, 0*S_X+0, 0*S_X+1, 1*S_X+2
};


SI    S_RegionIndex[STREAM_REGION_9_SIZE]=
{
    // 1
							  0*S_X,

	// 3  - круглая выборка
				             -1*S_X,         
				     0*S_X-1,          0*S_X+1,
				              1*S_X,           
   // 3  - квадратная выборка
				    -1*S_X-1,       -1*S_X+1,
				                               
				     1*S_X-1,         1*S_X+1,
    // 5 - круглая выборка
				    -2*S_X-1,-2*S_X,-2*S_X+1,
			 -1*S_X-2,                               -1*S_X+2,
			  0*S_X-2,                               0*S_X+2,
			  1*S_X-2,                                1*S_X+2,
				     2*S_X-1, 2*S_X, 2*S_X+1,
    // 5 - квадратная выборка
			 -2*S_X-2,                               -2*S_X+2,
			  2*S_X-2,                                2*S_X+2,
    // 7 - круглая выборка
				    -3*S_X-1,-3*S_X,-3*S_X+1,
	      -1*S_X-3,                                                     -1*S_X+3,
	       0*S_X-3,                                                      0*S_X+3,
	       1*S_X-3,                                                      1*S_X+3,
				     3*S_X-1, 3*S_X, 3*S_X+1,
    // 9 - круглая выборка
				    -4*S_X-1,-4*S_X,-4*S_X+1,
	      -3*S_X-3,-3*S_X-2,                               -3*S_X+2,-3*S_X+3,
	      -2*S_X-3,                                                     -2*S_X+3,
   -1*S_X-4,                                                                           -1*S_X+4,
    0*S_X-4,                                                                            0*S_X+4,
    1*S_X-4,                                                                            1*S_X+4,
	       2*S_X-3,                                                      2*S_X+3,
	       3*S_X-3, 3*S_X-2,                                3*S_X+2, 3*S_X+3,
				     4*S_X-1, 4*S_X, 4*S_X+1

};

/* 64 разряда - в одной четверти (90 градусов), 256 разрядов - в 4-х четвертях (360 градусов) */
UC InclTable64[INCL_TABLE_64_SIZE*INCL_TABLE_64_SIZE] =
{
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64,32,19,13,10, 8, 7, 6, 5, 5, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	64,45,32,24,19,16,13,11,10, 9, 8, 7, 7, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	64,51,40,32,26,22,19,16,15,13,12,11,10, 9, 9, 8, 8, 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3,
	64,54,45,38,32,27,24,21,19,17,16,14,13,12,11,11,10, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 4, 4,
	64,56,48,42,37,32,28,25,23,21,19,17,16,15,14,13,12,12,11,10,10,10, 9, 9, 8, 8, 8, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5,
	64,57,51,45,40,36,32,29,26,24,22,20,19,18,16,16,15,14,13,12,12,11,11,10,10,10, 9, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 6,
	64,58,53,48,43,39,35,32,29,27,25,23,22,20,19,18,17,16,15,14,14,13,13,12,12,11,11,10,10,10, 9, 9, 9, 9, 8, 8, 8, 8, 7,
	64,59,54,49,45,41,38,35,32,30,27,26,24,22,21,20,19,18,17,16,16,15,14,14,13,13,12,12,11,11,11,10,10,10, 9, 9, 9, 9, 8,
	64,59,55,51,47,43,40,37,34,32,30,28,26,25,23,22,21,20,19,18,17,16,16,15,15,14,14,13,13,12,12,12,11,11,11,10,10,10, 9,
	64,60,56,52,48,45,42,39,37,34,32,30,28,27,25,24,23,22,21,20,19,18,17,17,16,16,15,14,14,14,13,13,12,12,12,11,11,11,10,
	64,60,57,53,50,47,44,41,38,36,34,32,30,29,27,26,25,23,22,21,20,20,19,18,18,17,16,16,15,15,14,14,13,13,13,12,12,12,11,
	64,61,57,54,51,48,45,42,40,38,36,34,32,30,29,27,26,25,24,23,22,21,20,20,19,18,18,17,16,16,16,15,15,14,14,13,13,13,12,
	64,61,58,55,52,49,46,44,42,39,37,35,34,32,30,29,28,27,25,24,23,23,22,21,20,20,19,18,18,17,17,16,16,15,15,14,14,14,13,
	64,61,58,55,53,50,48,45,43,41,39,37,35,34,32,31,29,28,27,26,25,24,23,22,22,21,20,19,19,18,18,17,17,16,16,16,15,15,14,
	64,61,59,56,53,51,48,46,44,42,40,38,37,35,33,32,31,29,28,27,26,25,24,24,23,22,21,21,20,19,19,18,18,17,17,16,16,16,15,
	64,61,59,56,54,52,49,47,45,43,41,39,38,36,35,33,32,31,30,29,27,27,26,25,24,23,22,22,21,21,20,19,19,18,18,17,17,17,16,
	64,62,59,57,55,52,50,48,46,44,42,41,39,37,36,35,33,32,31,30,29,28,27,26,25,24,24,23,22,22,21,20,20,19,19,18,18,18,17,
	64,62,59,57,55,53,51,49,47,45,43,42,40,39,37,36,34,33,32,31,30,29,28,27,26,25,25,24,23,23,22,21,21,20,20,19,19,18,18,
	64,62,60,58,56,54,52,50,48,46,44,43,41,40,38,37,35,34,33,32,31,30,29,28,27,26,26,25,24,24,23,22,22,21,21,20,20,19,19,
	64,62,60,58,56,54,52,50,48,47,45,44,42,41,39,38,37,35,34,33,32,31,30,29,28,27,27,26,25,25,24,23,23,22,22,21,21,20,20,
	64,62,60,58,56,54,53,51,49,48,46,44,43,41,40,39,37,36,35,34,33,32,31,30,29,28,28,27,26,26,25,24,24,23,23,22,22,21,21,
	64,62,60,58,57,55,53,51,50,48,47,45,44,42,41,40,38,37,36,35,34,33,32,31,30,29,29,28,27,26,26,25,25,24,23,23,22,22,21,
	64,62,60,59,57,55,54,52,50,49,47,46,44,43,42,40,39,38,37,36,35,34,33,32,31,30,30,29,28,27,27,26,25,25,24,24,23,23,22,
	64,62,61,59,57,56,54,52,51,49,48,46,45,44,42,41,40,39,38,37,36,35,34,33,32,31,30,30,29,28,27,27,26,26,25,24,24,23,23,
	64,62,61,59,58,56,54,53,51,50,48,47,46,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,30,29,28,28,27,26,26,25,25,24,24,
	64,62,61,59,58,56,55,53,52,50,49,48,46,45,44,43,42,40,39,38,37,36,35,34,34,33,32,31,30,30,29,28,28,27,27,26,25,25,24,
	64,62,61,59,58,57,55,54,52,51,50,48,47,46,45,43,42,41,40,39,38,37,36,35,34,34,33,32,31,31,30,29,29,28,27,27,26,26,25,
	64,63,61,60,58,57,55,54,53,51,50,49,48,46,45,44,43,42,41,40,39,38,37,36,35,34,34,33,32,31,31,30,29,29,28,27,27,26,26,
	64,63,61,60,58,57,56,54,53,52,50,49,48,47,46,45,43,42,41,40,39,38,38,37,36,35,34,33,33,32,31,31,30,29,29,28,28,27,27,
	64,63,61,60,59,57,56,55,53,52,51,50,48,47,46,45,44,43,42,41,40,39,38,37,37,36,35,34,33,33,32,31,31,30,29,29,28,28,27,
	64,63,61,60,59,57,56,55,54,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,36,35,34,33,33,32,31,31,30,30,29,28,28,
	64,63,61,60,59,58,56,55,54,53,52,51,49,48,47,46,45,44,43,42,41,40,39,39,38,37,36,35,35,34,33,33,32,31,31,30,30,29,29,
	64,63,62,60,59,58,57,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,38,37,36,35,35,34,33,33,32,31,31,30,30,29,
	64,63,62,60,59,58,57,56,55,53,52,51,50,49,48,47,46,45,44,43,42,41,41,40,39,38,37,37,36,35,35,34,33,33,32,31,31,30,30,
	64,63,62,61,59,58,57,56,55,54,53,52,51,50,48,48,47,46,45,44,43,42,41,40,40,39,38,37,37,36,35,34,34,33,33,32,31,31,30,
	64,63,62,61,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,42,41,40,39,39,38,37,36,36,35,34,34,33,33,32,31,31,
	64,63,62,61,60,59,57,56,55,54,53,52,51,50,49,48,47,46,46,45,44,43,42,41,41,40,39,38,38,37,36,36,35,34,34,33,33,32,31,
	64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,43,42,41,40,40,39,38,37,37,36,35,35,34,34,33,33,32,
};

